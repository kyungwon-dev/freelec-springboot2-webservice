buildscript {
    ext {// use for global variables. scope : build.gradle
        springBootVersion = '2.1.7.RELEASE'
        springDependencyManagementVersion = '1.0.8.RELEASE'
    }
    repositories {  // set remote repository for library dependencies.
        mavenCentral()
    }
    dependencies { // add project development dependency
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    // plugins dependencies
    id 'java' // add plugins : 'java'
    id 'eclipse'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"  // springboot dependencies
}

group 'com.jojoldu.book'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    /*
    구버전          -> 신버전
    ------------------------------------------------
    compile         -> implementation
    testCompile     -> testImplementation
    debugCompile    -> debugImplementation
    androidTestCompile -> androidTestImplementation

    https://docs.gradle.org/current/userguide/dependency_management_for_java_projects.html#sec:configurations_java_tutorial
     */
    //testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation('org.springframework.boot:spring-boot-starter-web')

    // Gradle 5.x 이상의 버전에서의 Lombok 의존성 추가 방법이 변경되었음.
    // implementation('org.projectlombok:lombok')
    compileOnly ('org.projectlombok:lombok')
    annotationProcessor ('org.projectlombok:lombok')

    //test library
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    /*
     * org.springframework.boot:spring-boot-starter-data-jpa
     * - 스프링 부트용 Spring Data Jpa 추상화 라이브러리 입니다.
     * - 스프링 부트 버전에 맞춰 자동을 JPA 관련 아이브러리들의 버전을 관리.
     * h2
     * - 인메모리 관계형 데이터베이스
     * - 별도의 설치가 필요 없이 프로젝트 의존성만으로 관리할 수 있습니다.
     * - 메모리에서 실행되기 때문에, 애플리케이션을 재시작할 때 마다 초기화된다는 점을 이용하여 테스트 용도로 많이 사용.
     * - 로컬 환경에서의 구동에서 사용할 예정이기에, 먼저 h2 의존성을 추가합니다.
     */
    //JPA library
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')


}

test {
    useJUnitPlatform()
}